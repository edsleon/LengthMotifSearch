package proyecto;
//package proyecto;
/**
 *
 * @author Edson
 */
public class Poblacion 
{
    private int n; //TAMAÑO DE LA POBLACION
    private Individuo[] poblacion; // VECTOR QUE CONTIENE TODOS LOS INDIVIDUOS
    private int tammax=35;
    private int tammin=5;
    Poblacion(int n) //CONSTRUCTOR
    {
        this.n=n; //TAMAÑO PARA LA POBLACION RECIBIDO COMO PARAMETRO POR EL CONTRUCTOR
        poblacion=new Individuo[this.n]; // CONTRUYE EL VECTOR CON EL TAMAÑO RECIBIDO
        GenerarPoblacion(); //LLAMADA DE METODO PARA CONSTRUIR LA POBLACION
    }
    
    int getn() //OBTENER TAMAÑO DE LA POBLACION
    {
        return n;
    }
  
    void setIndividuoPoblacion(Individuo in,int pos) //DEPOSITAR UN INDIVIDUO DE LA POBLACION EN UNA POSICION ESPECIFICA
    {
        this.poblacion[pos]=in;
    } 
    Individuo getIndividuoPoblacion(int pos) //OBTENER UN INDIVIDUO DE LA POBLACION EN UNA POSICION ESPECIFICA
    {
        return poblacion[pos];
    } 
    void setPoblacion(Individuo[] in) //DEPOSITAR UN INDIVIDUO DE LA POBLACION EN UNA POSICION ESPECIFICA
    {
        this.poblacion=in;
    }
    Individuo[] getpoblacion() //OBTENER LA POBLACION POR POSICIONES ESPECIFICAS DEL VECTOR
    {
        return poblacion;
    }
    void Imprimirpoblacion() //IMPRIME LA POBLACION, AYUDA DEL DESARROLLADOR
    {
        Individuo mejorind=new Individuo("");
        for(int i=0;i<n;i++)
        {
            //if(poblacion[i].getPeso()!=0)
            {
               System.out.print(poblacion[i].getcromosoma()+" "+poblacion[i].getPeso()+"\n");
               if(mejorind.getPeso()<poblacion[i].getPeso())
               {
                   mejorind=poblacion[i];
               }
               
            }
        }
        //TODO UTILIZAR BUFFERED WRITER
        System.out.print("El mejor individuo es "+mejorind.getcromosoma()+" con peso "+mejorind.getPeso()+" y tamaño "+mejorind.getTamano()+"\n\n\n\n");
    }
  
    void GenerarPoblacion() //METODO QUE CREA LA POBLACION INICIAL
    {
        for(int i=0;i<n;i++) // RECORRE CADA INDIVIDUO DE LA POBLACION ASIGANADOLE VALORES
        {
	        String ind="";
	        int tamano=(int)(Math.random()*(tammax-tammin)+tammin);
	        for(int j=0;j<tamano;j++) //CICLO QUE DETERMINA EL INDIVIDUO ALEATORIAMENTE
	        {
	            int random=(int)((Math.random()*4)+1); // BUSCA UN NUM ALEATORIO ENTRE 1 Y 4
	            switch(random) // DE FORMA ALEATORIA INGRESA LAS BASES NUCLEOTICAS
	            {
	                case 1:
	                    ind=ind.concat("C");break;
	                case 2:
	                    ind=ind.concat("G");break;
	                case 3:
	                    ind=ind.concat("A");break;
	                case 4:
	                    ind=ind.concat("U");break;
	            }
	        }
	        poblacion[i]=new Individuo(ind); // INGRESA EL INDIVIDUO CREADO ALEATORIAMENTE
        }
    }
}
